#!/usr/bin/env bash
# Usage: redwood status [-v]
# Summary: Report redwood's status
# Help: Show tab-separated redwood status descriptor(s)
#
# Normal output: up|incomplete|down
# Verbose output: up|incomplete|down dev|prod|unknown
#
# Status types:
#   up - core redwood containers up and responding to requests
#   incomplete - some but not all core redwood containers up or not responding to requests
#   down - no core redwood containers up
#
# Profile types:
#   dev - redwood running in dev mode (no backups, no LetsEncrypt, redwood-specific nginx serving redwood.io dev certificates)
#   prod - redwood running in production mode (backups, LetsEncrypt, and no redwood-specific nginx)
#   unknown - couldn't tell profile from currently running containers
#   none - redwood is down
#
# OPTIONS
# -v enable verbose output
set -e

# status types
UP=up
INCOMPLETE=incomplete
DOWN=down

# profile types
PROD=prod
DEV=dev
UNKNOWN=unknown
NONE=none

# 1 if container is up, else 0
function check_container_by_name() {
    name=$1
    docker ps | awk 'NF>1{print $NF}' | grep -ce "^${name}$"
}

quiet=1
while getopts ":v" opt; do
    case $opt in
        v)
            quiet=0
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            ;;
    esac
done

# determine status
if [[ $(check_container_by_name redwood-storage-server) -eq 1
        && $(check_container_by_name redwood-metadata-server) -eq 1
        && $(check_container_by_name redwood-auth-server) -eq 1
        && $(check_container_by_name redwood-metadata-db) -eq 1
        && $(check_container_by_name redwood-auth-db) -eq 1
    ]]; then
    status=${UP}
    # ping java code
    docker run --net redwood_internal --rm --link redwood-storage-server appropriate/curl http://redwood-storage-server:5431/download/ping >/dev/null 2>&1 || status=${INCOMPLETE}
elif [[ $(check_container_by_name redwood-storage-server) -eq 1
            || $(check_container_by_name redwood-metadata-server) -eq 1
            || $(check_container_by_name redwood-auth-server) -eq 1
            || $(check_container_by_name redwood-metadata-db) -eq 1
            || $(check_container_by_name redwood-auth-db) -eq 1
      ]]; then
    status=${INCOMPLETE}
else
    status=${DOWN}
fi

# determine profile
if [[ $(check_container_by_name redwood-nginx) -eq 1 ]]; then
    profile=${DEV}
elif [[ $(check_container_by_name redwood-auth-backup) -eq 1
            || $(check_container_by_name redwood-metadata-backup) -eq 1
      ]]; then
    profile=${PROD}
elif [[ "${status}" = "${DOWN}" ]]; then
    profile=${NONE}
else
    profile=${UNKNOWN}
fi

if [[ ${quiet} -eq 1 ]]; then
    printf '%s\n' "${status}"
else
    printf '%s\t%s\n' "${status}" "${profile}"
fi
