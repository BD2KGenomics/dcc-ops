#!/usr/bin/env bash
# Usage: redwood up [-d]
# Summary: Start redwood
# Help: Start redwood. This assumes dcc-ops/redwood/.env has been prepared.
#
# Run redwood in dev mode by specifying -d or setting environment variable REDWOOD_PROFILE=dev.
#
# OPTIONS
# -d dev mode; use dev.yml instead of prod.yml
# -e use external database; don't launch db containers
set -e

# options
dev=0
external_dbs=0
# check env
if [[ "$REDWOOD_PROFILE" = "dev" ]]; then
    dev=1
fi
# parse opts
while getopts ":d" opt; do
    case $opt in
        d)
            dev=1
            ;;
        e)
            external_dbs=1
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            ;;
    esac
done

base_compose="${_REDWOOD_ROOT}/../base.yml"
dev_compose="${_REDWOOD_ROOT}/../dev.yml"
prod_compose="${_REDWOOD_ROOT}/../prod.yml"
db_compose="${_REDWOOD_ROOT}/../db.yml"

[[ ${dev} -eq 1 ]] && activated_compose="${dev_compose}" || activated_compose="${prod_compose}"
[[ ${external_dbs} -eq 1 ]] && db_compose="" || db_compose="-f ${db_compose}"

cd "${_REDWOOD_ROOT}/.."
set -x
docker-compose -f "${base_compose}" ${db_compose} -f "${activated_compose}" up -d
